/*
*
* The comment code
* has diferent structure
* that other code
* but same functionality
*
* */

//Using a closure
var PairBarriers = ( function() {
    var externalBarrier,
        internalBarrier,
        combination = {
            internal: false,
            external: false,
        };

    var init = function( extPin, intPin, five ) {
        externalBarrier =  new five.Barrier( extPin );
        internalBarrier =  new five.Barrier( intPin );

        bindEvents();
    };

    var bindEvents = function() {
        externalBarrier
            .on( 'up', function() {
                combination.external = false;
            })
            .on( 'down', function() {
                combination.external = true;
            });

        internalBarrier
            .on( 'up', function() {
                combination.internal = false;
            })
            .on( 'down', function() {
                combination.internal = true;
            });
    };

    return {
        init: init
    }
})();


/* Using a single function

 function PairBarriers(extPin, intPin) {
     var externalBarrier =  new this.Barrier(extPin);
     var internalBarrier =  new this.Barrier(intPin);
     var combination = {
     internal: false,
     external: false,
     };

     externalBarrier
         .on('up', function(){
             combination.external = false;
     })
        .on('down', function(){
            combination.external = true;
     });

     internalBarrier
        .on('up', function(){
            combination.internal = false;
     })
        .on('down', function(){
            combination.internal = true;
     });
 };*/

module.exports = PairBarriers;


